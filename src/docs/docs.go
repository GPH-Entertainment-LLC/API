// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/addFaq": {
            "post": {
                "description": "Adds an faq to the list of active faq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Add an faq",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "faq",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Faq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Faq"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/approveVendor": {
            "post": {
                "description": "Approve a vendors application and verify their account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Approve a new vendors application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "creator uid",
                        "name": "vendorUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorApplication"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/editFaq": {
            "patch": {
                "description": "Changes the structure of an existing faq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Edit an existing faq",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "faq id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "faq patch map",
                        "name": "faqPatch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Faq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "Authenticate and login to the admin dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Login as an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/rejectVendor": {
            "post": {
                "description": "Reject a vendorss application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Reject a vendor application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "creator uid",
                        "name": "vendorUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorApplication"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/removeCreator": {
            "delete": {
                "description": "Revoke a vendors verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Remove a vendor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "creator uid",
                        "name": "vendorUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/removeFaq": {
            "delete": {
                "description": "Remoe an faq from the active list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Remove an faq",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "faq id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/avgPacksPurchased/:vendorId": {
            "get": {
                "description": "Get the average amount of packs purchased by a user at a time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get average pack qty purchased",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/customers/:vendorId": {
            "get": {
                "description": "Get a list of the top customers for a specific vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get list of top customers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CustomerAnalytic"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/favoriteAmount/:vendorId": {
            "get": {
                "description": "Get the current favorite amount for this vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get the favorite amount for vendor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/maxPacksPurchased/:vendorId": {
            "get": {
                "description": "Get the max amount of packs purchased by a user at a time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get the max pack qty purchased",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/minPacksPurchased/:vendorId": {
            "get": {
                "description": "Get the min amount of packs purchased by a user at a time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get the min pack qty purchased",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/packQtySold/:vendorId": {
            "get": {
                "description": "Get a list of packs and their qty sold",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get the pack qty sold analytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PackQtySoldAnalytic"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/packSales/:vendorId": {
            "get": {
                "description": "Get pack sales analytics for a vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get the pack sales analytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time granularity",
                        "name": "granularity",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "month filter",
                        "name": "month",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "year filter",
                        "name": "year",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PackAnalyticsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/totalPacksSold/:vendorId": {
            "get": {
                "description": "Get a total value of all packs sold by this vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get total vendor packs sold",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/analytics/totalRevenue/:vendorId": {
            "get": {
                "description": "Get the total revenue generated by this vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get total revenue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/application": {
            "post": {
                "description": "A user submits a new vendor application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Post a new vendor application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorApplication"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/categories/:category": {
            "get": {
                "description": "Get list of specific categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get list of specific categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category param must be item,pack,or vendor",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/categories/all": {
            "get": {
                "description": "Get list of all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get list of all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/financial/allEarnings/:creatorUid": {
            "get": {
                "description": "Get list of all earnings for creator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Financial"
                ],
                "summary": "Get list of all earnings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AllEarningsPeriod"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/financial/creatorEarnings/:creatorUid": {
            "get": {
                "description": "Get list of creator earnings for a creator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Financial"
                ],
                "summary": "Get list of creator earnings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CreatorEarningsPeriod"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/financial/referralEarnings/:creatorUid": {
            "get": {
                "description": "Get list of referral earnings for creator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Financial"
                ],
                "summary": "Get list of referral earnings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReferralEarningsPeriod"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/item": {
            "post": {
                "description": "Save item record in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create an item",
                "parameters": [
                    {
                        "description": "Item",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/item/categories": {
            "post": {
                "description": "Associate categories to an item for a vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Add item categories",
                "parameters": [
                    {
                        "description": "categories",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ItemCategory"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/item/{id}": {
            "get": {
                "description": "Retrieve an item based on ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Get an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an item with new patch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Update an item",
                "parameters": [
                    {
                        "description": "item patch to update",
                        "name": "itemPatch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/items": {
            "delete": {
                "description": "Deactivate an item from the DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item ids",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/items/user": {
            "delete": {
                "description": "Deactivate user item records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Remove user items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user item ids",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/log/signIn/:uid": {
            "post": {
                "description": "Log a users sign in to persistent data store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logging"
                ],
                "summary": "Post a user sign in log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignInLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/buy": {
            "post": {
                "description": "Associates a new set of x available packs with a user after purchasing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Buys a set of packs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pack Config ID",
                        "name": "packConfigId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "amount of packs",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.PackBoughtResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/config": {
            "post": {
                "description": "Save pack configuration record in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Create a pack config",
                "parameters": [
                    {
                        "description": "Pack Config",
                        "name": "pack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PackConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PackConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a pack config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Patch a pack config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pack config id",
                        "name": "packConfigId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "pack config patch map",
                        "name": "patchMap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PackConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/config/{id}": {
            "get": {
                "description": "get a pack by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "get packs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pack Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PackConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/configs": {
            "delete": {
                "description": "Soft delete pack configs and all item pack configs in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Delete a list of pack config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pack config ids",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor id",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/deactivate": {
            "delete": {
                "description": "Set an active false value without soft deleting a pack to make pack private without release date to customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Inactivate pack(s) from the marketplace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pack config ids",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor id",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/generate": {
            "post": {
                "description": "Add pack and item fact records to DB for logical pack stock quantities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Generate pack stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pack Config ID",
                        "name": "packConfigId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/core.AddPackSuccessResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/item/configs": {
            "post": {
                "description": "Add pack item configs that determine how packs are built",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Add pack item configs",
                "parameters": [
                    {
                        "description": "Pack Item Configs",
                        "name": "packItemConfigs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PackItemConfig"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/core.AddPackSuccessResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/items/:id": {
            "get": {
                "description": "Get a list of pack item configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get pack item configs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pack id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PackItemConfigExpanded"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/items/generateOdds": {
            "post": {
                "description": "Given a list of items to distribute in a pack, return odds distribution based on item rarities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Generate odds to use for pack item configurations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor id",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/items/preview/:id": {
            "get": {
                "description": "Get a list of pack item configs preview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get pack item configs preview",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pack config id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pack id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PackItemConfigExpanded"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/open/{id}": {
            "get": {
                "description": "Sets an opened date on the pack fact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Open a pack",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pack fact id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/pack/{id}": {
            "get": {
                "description": "Get a joined 2 dimensional pack object with nested item list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get a pack",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pack id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Pack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/packs/amount/{uid}": {
            "get": {
                "description": "Get a user packs amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Get user pack amount",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.AmountResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/packs/categories": {
            "post": {
                "description": "Associates a set of categories to a pack config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pack"
                ],
                "summary": "Add pack categories",
                "parameters": [
                    {
                        "description": "categories",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PackCategory"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/referral/create": {
            "post": {
                "description": "A creator can upload a new custom referral code to use for referring new creators",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "Create a custom code referral code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "referral code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ReferralCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/referral/generate": {
            "post": {
                "description": "A creator can generate a new referral code to use for referring new creators",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "Generate a new referral code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ReferralCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/referral/getActiveCodes": {
            "get": {
                "description": "A creator can get a list of all active referral codes associated with them",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "Get all active codes that a creator has",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReferralCode"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/referral/remove": {
            "delete": {
                "description": "A creator can deactivate a referral code so it can no longer be used",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "Remove a referral code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "referral code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/report/opts": {
            "get": {
                "description": "A user can get a list of the available report options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get active report options",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ReportOpt"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/report/submit": {
            "post": {
                "description": "A user can submit a report against another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Submit a new report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "report object",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Report"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ReportExpanded"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/balance/{uid}": {
            "get": {
                "description": "Get a token balance for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get a token balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bundle id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenBalance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a users token balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Update a token balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenBalance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/bundle": {
            "post": {
                "description": "Add a token bundle to the DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Add a token bundle",
                "parameters": [
                    {
                        "type": "number",
                        "description": "dollar amount",
                        "name": "dollarAmt",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "token amount",
                        "name": "tokenAmt",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "bundle image id",
                        "name": "bundleImageId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenBundle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/bundle/{id}": {
            "get": {
                "description": "Get a token bundle by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get a token bundle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bundle id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenBundle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/bundles": {
            "get": {
                "description": "Get a list of current token bundles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get token bundles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TokenBundle"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/bundles/price": {
            "get": {
                "description": "Get a token bundles filtered by dollar amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get a token bundles filtered by dollar amount",
                "parameters": [
                    {
                        "type": "number",
                        "description": "dollar amount",
                        "name": "dollarAmt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TokenBalance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/token/bundles/priceRange": {
            "get": {
                "description": "Get a list of token bundles filtered on lower upper limits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get a list of token bundles filtered on lower upper limits",
                "parameters": [
                    {
                        "type": "number",
                        "description": "lower dollar amount",
                        "name": "lowerDollarAmt",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "upper dollar amount",
                        "name": "upperDollarAmt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TokenBundle"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/transaction/history/{uid}": {
            "get": {
                "description": "Get a list of trnasactions that a user has executed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a user transaction history page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserTransactionHistoryPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Save user record in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deactivates a user from the DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a user record in DB given a patch map",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Patch a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "user patch map",
                        "name": "userPatchMap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/favorite": {
            "get": {
                "description": "Get a favorite between user and vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a favorite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Favorite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a vendor favorite record to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add a user favorite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Favorite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Add a vendor favorite record to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add a user favorite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Favorite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/favorites/{uid}": {
            "get": {
                "description": "Get user favorites vendor page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user favorite page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserFavoritePage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/item/withdrawal": {
            "post": {
                "description": "Allows a user to withdrawal an item from their collection which is externally fulfilled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Withdrawal a user item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "authorized uid",
                        "name": "authorizedUid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "user item id",
                        "name": "userItemId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ItemWithdrawal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/items/{uid}": {
            "get": {
                "description": "Get a list of items that a user has in their collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user collection item page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserItemPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/packs/{uid}": {
            "get": {
                "description": "Get a list of packs that a user has in their collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user collection pack page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserPackPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/username/:username": {
            "get": {
                "description": "Retrieve a user given the username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "description": "Save a user record in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/:uid": {
            "get": {
                "description": "Get a vendor given the uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get a vendor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Vendor"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/categories": {
            "post": {
                "description": "Associates a set of categories to a vendor profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Add vendor categories",
                "parameters": [
                    {
                        "description": "categories",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.VendorCategory"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/categories/:vendorId": {
            "get": {
                "description": "Get a list of vendor categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "vendorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.VendorCategoryExpanded"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/items/{uid}": {
            "get": {
                "description": "Get a list of item specific to a vendor to see what they have available to make packs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor item list page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorItemPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/packs/profile/{uid}": {
            "get": {
                "description": "Get a list of packs that a vendor has on their profile which users can see",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor profile pack page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorPackPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendor/packs/{uid}": {
            "get": {
                "description": "Get a list of packs specific to a vendor to see what they have in stock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor pack list page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vendor uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorPackPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendors": {
            "get": {
                "description": "Get a list of vendors for a page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/vendors/packs": {
            "get": {
                "description": "Get page of vendor shop packs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor shop pack",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort direction",
                        "name": "sortDir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category filter",
                        "name": "filterOn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VendorPackPage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "core.AddPackSuccessResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "core.AmountResp": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "model.AllEarningsPeriod": {
            "type": "object",
            "properties": {
                "earningType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "endingPeriod": {
                    "type": "string"
                },
                "payoutDate": {
                    "type": "string"
                },
                "startingPeriod": {
                    "type": "string"
                },
                "totalEarnings": {
                    "type": "number"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.CreatorEarningsPeriod": {
            "type": "object",
            "properties": {
                "earningType": {
                    "type": "string"
                },
                "earnings": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "endingPeriod": {
                    "type": "string"
                },
                "payoutDate": {
                    "type": "string"
                },
                "startingPeriod": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.CustomerAnalytic": {
            "type": "object",
            "properties": {
                "amountSpent": {
                    "type": "number"
                },
                "packsPurchased": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Faq": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "answer": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "removedAt": {
                    "type": "string"
                }
            }
        },
        "model.Favorite": {
            "type": "object",
            "properties": {
                "favoritedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.Item": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "rarityId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.ItemCategory": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                }
            }
        },
        "model.ItemWithdrawal": {
            "type": "object",
            "properties": {
                "fulfilledAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "userItemId": {
                    "type": "integer"
                },
                "withdrawnAt": {
                    "type": "string"
                }
            }
        },
        "model.Pack": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "openedAt": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "packConfigId": {
                    "type": "integer"
                },
                "packItemQty": {
                    "type": "integer"
                },
                "purchasedAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.PackAnalyticsResp": {
            "type": "object",
            "properties": {
                "dataSet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PackSalesAnalytic"
                    }
                },
                "timeAxis": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.PackBoughtResp": {
            "type": "object",
            "properties": {
                "newBalance": {
                    "type": "number"
                },
                "packIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.PackCategory": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "packConfigId": {
                    "type": "integer"
                }
            }
        },
        "model.PackConfig": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentStock": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemQty": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "qtySold": {
                    "type": "integer"
                },
                "releaseAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tokenAmount": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.PackItemConfig": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                },
                "packConfigId": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "removedAt": {
                    "type": "string"
                }
            }
        },
        "model.PackItemConfigExpanded": {
            "type": "object",
            "properties": {
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemQty": {
                    "type": "integer"
                },
                "itemValue": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.PackQtySoldAnalytic": {
            "type": "object",
            "properties": {
                "packTitle": {
                    "type": "string"
                },
                "qtySold": {
                    "type": "integer"
                }
            }
        },
        "model.PackSalesAnalytic": {
            "type": "object",
            "properties": {
                "granularity": {
                    "type": "string"
                },
                "qtySold": {
                    "type": "integer"
                },
                "totalSales": {
                    "type": "number"
                }
            }
        },
        "model.PageUserFavorite": {
            "type": "object",
            "properties": {
                "favoriteId": {
                    "type": "integer"
                },
                "favoritedAt": {
                    "type": "string"
                },
                "favoritesAmount": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "vendorActive": {
                    "type": "boolean"
                },
                "vendorBannerUrl": {
                    "type": "string"
                },
                "vendorBio": {
                    "type": "string"
                },
                "vendorBirthday": {
                    "type": "string"
                },
                "vendorCreatedAt": {
                    "type": "string"
                },
                "vendorDisplayName": {
                    "type": "string"
                },
                "vendorFavoritesAmount": {
                    "type": "integer"
                },
                "vendorFirstName": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                },
                "vendorLastName": {
                    "type": "string"
                },
                "vendorMainUrl": {
                    "type": "string"
                },
                "vendorPackAmount": {
                    "type": "integer"
                },
                "vendorThumbUrl": {
                    "type": "string"
                },
                "vendorUpdatedAt": {
                    "type": "string"
                },
                "vendorUsername": {
                    "type": "string"
                }
            }
        },
        "model.PageUserItem": {
            "type": "object",
            "properties": {
                "acquiredAt": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentExpiredTime": {
                    "type": "string"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expiredAt": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "string"
                },
                "ranking": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "rawCategories": {
                    "type": "string"
                },
                "totalItemsAmount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userItemId": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "vendorActive": {
                    "type": "boolean"
                },
                "vendorBannerUrl": {
                    "type": "string"
                },
                "vendorBio": {
                    "type": "string"
                },
                "vendorDisplayName": {
                    "type": "string"
                },
                "vendorFavoritesAmount": {
                    "type": "integer"
                },
                "vendorFirstName": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                },
                "vendorImageUrl": {
                    "type": "string"
                },
                "vendorLastName": {
                    "type": "string"
                },
                "vendorMainUrl": {
                    "type": "string"
                },
                "vendorThumbUrl": {
                    "type": "string"
                },
                "vendorUsername": {
                    "type": "string"
                }
            }
        },
        "model.PageUserPack": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemQty": {
                    "type": "integer"
                },
                "latestPurchasedAt": {
                    "type": "string"
                },
                "packAmount": {
                    "type": "integer"
                },
                "packConfigId": {
                    "type": "integer"
                },
                "packIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "qty": {
                    "type": "integer"
                },
                "rawCategories": {
                    "type": "string"
                },
                "rawPackIds": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tokenAmount": {
                    "type": "number"
                },
                "totalPacksAmount": {
                    "type": "integer"
                },
                "vendorActive": {
                    "type": "boolean"
                },
                "vendorBannerUrl": {
                    "type": "string"
                },
                "vendorBio": {
                    "type": "string"
                },
                "vendorDisplayName": {
                    "type": "string"
                },
                "vendorFavoritesAmount": {
                    "type": "integer"
                },
                "vendorFirstName": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                },
                "vendorImageUrl": {
                    "type": "string"
                },
                "vendorLastName": {
                    "type": "string"
                },
                "vendorMainUrl": {
                    "type": "string"
                },
                "vendorThumbUrl": {
                    "type": "string"
                },
                "vendorUsername": {
                    "type": "string"
                }
            }
        },
        "model.PageUserTransactionHistory": {
            "type": "object",
            "properties": {
                "billedInitialPrice": {
                    "type": "string"
                },
                "billedRecurringPrice": {
                    "type": "string"
                },
                "bundleImageUrl": {
                    "type": "string"
                },
                "clientAccnum": {
                    "type": "string"
                },
                "clientSubacc": {
                    "type": "string"
                },
                "currencyCode": {
                    "type": "string"
                },
                "dollarAmount": {
                    "type": "number"
                },
                "initialPeriod": {
                    "type": "string"
                },
                "rebills": {
                    "type": "string"
                },
                "recurringPeriod": {
                    "type": "string"
                },
                "subsccriptionId": {
                    "type": "string"
                },
                "tokenAmount": {
                    "type": "number"
                },
                "tokenBundleId": {
                    "type": "integer"
                },
                "tranDateTime": {
                    "type": "string"
                },
                "transactionCount": {
                    "type": "integer"
                },
                "transactionId": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.PageVendor": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "bannerUrl": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "favoritesAmount": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isVendor": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "packAmount": {
                    "type": "integer"
                },
                "rawCategories": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vendorAmount": {
                    "type": "integer"
                }
            }
        },
        "model.PageVendorItem": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentExpiredTime": {
                    "type": "string"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "ranking": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "rawCategories": {
                    "type": "string"
                },
                "totalItemsAmount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "vendorActive": {
                    "type": "boolean"
                },
                "vendorBannerUrl": {
                    "type": "string"
                },
                "vendorBio": {
                    "type": "string"
                },
                "vendorDisplayName": {
                    "type": "string"
                },
                "vendorFavoritesAmount": {
                    "type": "integer"
                },
                "vendorFirstName": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                },
                "vendorImageUrl": {
                    "type": "string"
                },
                "vendorLastName": {
                    "type": "string"
                },
                "vendorMainUrl": {
                    "type": "string"
                },
                "vendorThumbUrl": {
                    "type": "string"
                },
                "vendorUsername": {
                    "type": "string"
                }
            }
        },
        "model.PageVendorPack": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentStock": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemQty": {
                    "type": "integer"
                },
                "packConfigId": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "qtySold": {
                    "type": "integer"
                },
                "rawCategories": {
                    "type": "string"
                },
                "releaseAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tokenAmount": {
                    "type": "number"
                },
                "totalPacksAmount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vendorActive": {
                    "type": "boolean"
                },
                "vendorBannerUrl": {
                    "type": "string"
                },
                "vendorBio": {
                    "type": "string"
                },
                "vendorDisplayName": {
                    "type": "string"
                },
                "vendorFavoritesAmount": {
                    "type": "integer"
                },
                "vendorFirstName": {
                    "type": "string"
                },
                "vendorId": {
                    "type": "string"
                },
                "vendorImageUrl": {
                    "type": "string"
                },
                "vendorLastName": {
                    "type": "string"
                },
                "vendorMainUrl": {
                    "type": "string"
                },
                "vendorThumbUrl": {
                    "type": "string"
                },
                "vendorUsername": {
                    "type": "string"
                }
            }
        },
        "model.ReferralCode": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "removedAt": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.ReferralEarningsPeriod": {
            "type": "object",
            "properties": {
                "earningType": {
                    "type": "string"
                },
                "earnings": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "endingPeriod": {
                    "type": "string"
                },
                "payoutDate": {
                    "type": "string"
                },
                "startingPeriod": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.Report": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "optId": {
                    "type": "integer"
                },
                "reportedAt": {
                    "type": "string"
                },
                "reportedUid": {
                    "type": "string"
                },
                "resolvedAt": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.ReportExpanded": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "opt": {
                    "type": "string"
                },
                "reportId": {
                    "type": "integer"
                },
                "reportedAt": {
                    "type": "string"
                },
                "reportedUid": {
                    "type": "string"
                },
                "resolvedAt": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.ReportOpt": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "opt": {
                    "type": "string"
                },
                "removedAt": {
                    "type": "string"
                }
            }
        },
        "model.SignInLog": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ipAddr": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.TokenBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.TokenBundle": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "bundleImageUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "dollarAmount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "tokenAmount": {
                    "type": "number"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "bannerImgVersion": {
                    "type": "integer"
                },
                "bannerUrl": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isVendor": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "lastUsernameChangeAt": {
                    "type": "string"
                },
                "profileImgVersion": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserFavoritePage": {
            "type": "object",
            "properties": {
                "favoriteAmount": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageUserFavorite"
                    }
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "model.UserItemPage": {
            "type": "object",
            "properties": {
                "earliestExpired": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageUserItem"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "userItemAmount": {
                    "type": "integer"
                }
            }
        },
        "model.UserPackPage": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageUserPack"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "userPackAmount": {
                    "type": "integer"
                }
            }
        },
        "model.UserTransactionHistoryPage": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageUserTransactionHistory"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "transactionAmount": {
                    "type": "integer"
                }
            }
        },
        "model.Vendor": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "bannerImgVersion": {
                    "type": "integer"
                },
                "bannerUrl": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentMainUrl": {
                    "type": "string"
                },
                "contentThumbUrl": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "favoritesAmount": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isVendor": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "packAmount": {
                    "type": "integer"
                },
                "profileImgVersion": {
                    "type": "integer"
                },
                "rawCategories": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.VendorApplication": {
            "type": "object",
            "properties": {
                "approvedAt": {
                    "type": "string"
                },
                "aptNumber": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "referralCode": {
                    "type": "string"
                },
                "rejectedAt": {
                    "type": "string"
                },
                "socialLink1": {
                    "type": "string"
                },
                "socialLink2": {
                    "type": "string"
                },
                "socialLink3": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                },
                "submittedAt": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "model.VendorCategory": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.VendorCategoryExpanded": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer"
                },
                "vendorId": {
                    "type": "string"
                }
            }
        },
        "model.VendorItemPage": {
            "type": "object",
            "properties": {
                "earliestExpired": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageVendorItem"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "vendorItemAmount": {
                    "type": "integer"
                }
            }
        },
        "model.VendorPackPage": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageVendorPack"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "vendorPackAmount": {
                    "type": "integer"
                }
            }
        },
        "model.VendorPage": {
            "type": "object",
            "properties": {
                "nextPage": {
                    "type": "integer"
                },
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PageVendor"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "vendorAmount": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "apidev.xopacks.com",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "XOPacks API",
	Description:      "The official XOPAcks API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
